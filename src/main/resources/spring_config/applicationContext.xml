<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
						 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">



  <!--
	
	<ehcache:annotation-driven  cache-manager="cacheManager" />
    
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"
        p:config-location="classpath:/ehcache-test.xml" p:shared="true"
    />
   -->

	<import resource="applicationContext-bean.xml"/>

<!--
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver"></property>
		<property name="jdbcUrl" value="jdbc:mysql://123.57.151.176:3306/${joy_db.name}"> </property>
		<property name="user" value="root"> </property>
		<property name="password" value="Qrj12345"> </property>
	</bean>
-->
<!--
	<bean id="springDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" >
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:SPRING_TEST" />
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="username" value="root" />
		<property name="password" value="root" />
		<property name="removeAbandoned" value="true"/>
		<property name="initialSize" value="20" />
		<property name="maxActive" value="30" />
	</bean>
-->


<!--
	<bean id="dataSource" class="org.apache.ibatis.datasource.pooled.PooledDataSource">
		<property name="driver" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://123.57.151.176:3306/${joy_db.name}" />
		<property name="username" value="root" />
		<property name="password" value="Qrj12345" />
		<property name="poolMaximumIdleConnections" value="10" />
		<property name="poolMaximumActiveConnections" value="30" />
	</bean>
-->







	<bean name="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName">
			<value>com.mysql.jdbc.Driver</value>
		</property>
		<property name="url">
			<value>jdbc:mysql://${mysql.ip}:3306/${joy_db.name}</value>
		</property>
		<property name="username">
			<value>root</value>
		</property>
		<property name="password">
			<value>${mysql.password}</value>
		</property>

	</bean>


	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis_config.xml"></property>
		<property name="typeAliases" value="com.joymove.velocity.VelocityDriverDeclare" />
	</bean>


	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<property name="basePackage" value="com.joymove.dao" />
	</bean>

	<bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<property name="dataSource" ref="dataSource"></property>
 	</bean>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="delete*" propagation="REQUIRED" read-only="false"
			           rollback-for="java.lang.Exception"/>
			<tx:method name="insert*" propagation="REQUIRED" read-only="false"
			           rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false"
			           rollback-for="java.lang.Exception" />

			<tx:method name="find*" propagation="SUPPORTS"/>
			<tx:method name="get*" propagation="SUPPORTS"/>
			<tx:method name="select*" propagation="SUPPORTS"/>
		</tx:attributes>
	</tx:advice>
	 <bean id="retryAdvice"
     			 class="org.springframework.retry.interceptor.RetryOperationsInterceptor">
		    <property name="retryOperations">
		        <bean class="org.springframework.retry.support.RetryTemplate">
		            <property name="retryPolicy">
		                <bean class="org.springframework.retry.policy.SimpleRetryPolicy">
		                   <property name="MaxAttempts" value="4"/>
		                </bean>
		            </property>
		            <property name="backOffPolicy">
		                <bean class="org.springframework.retry.backoff.ExponentialBackOffPolicy">
		                    <property name="initialInterval" value="200"/>
		                    <property name="maxInterval" value="2000"/>
		                    <property name="multiplier" value="1.5"/>
		                </bean>
		            </property>
		        </bean>
		    </property>
  		</bean>

	<bean id="debugInterceptor"
		  class="org.springframework.aop.interceptor.DebugInterceptor" />






	<aop:config>
	    <aop:pointcut id="retry_car_update_state"
		            expression="execution(* com.futuremove.cacheServer.service.impl.CarDynPropsServiceImpl.update(..))" />

		<aop:pointcut id="pc" expression="execution(* com.joymove.service.impl.*.*(..))" />

		<aop:pointcut id="retry_redis_access"
					  expression="execution(* com.joymove.redis.*.*(..))" />
		<aop:pointcut id="ttt"
					  expression="execution(* com.joymove.test.*.*(..))" />

		<aop:advisor pointcut-ref="ttt"
					 advice-ref="debugInterceptor" order="0"/>
		<!--order 越大离被调用的对象越近-->
		<aop:advisor pointcut-ref="ttt"
					 advice-ref="retryAdvice" order="1"/>

		<aop:advisor pointcut-ref="pc" advice-ref="retryAdvice" order="0"/>

		<aop:advisor pointcut-ref="pc" advice-ref="txAdvice" order="1"/>


		<aop:advisor pointcut-ref="retry_car_update_state"
		                 advice-ref="retryAdvice"/>

		<aop:advisor pointcut-ref="retry_redis_access"
					 advice-ref="retryAdvice"/>


	</aop:config>
	
	
	
	
</beans>